using System;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Globalization;
using System.Numerics;
using System.Runtime.CompilerServices;

class Program
{
    static void Main()
    {
        GG gg = new GG("Luk", 10);
        gg.Decision();
        Npc Misha = new Npc(new Talk(), "Misha");
        Misha.Vkid();
        Misha.Umermentalino();

        Alcoholic Vlada = new Alcoholic("Vlada");
        AlcoholicSave one = Vlada.SaveAlcoholic();
        Vlada.Drink();
    }
}

//Стратегия
public interface IStrategy
{
    void Attack();
}

public class Luk : IStrategy
{
    public void Attack()
    {
        Console.WriteLine("Huiak whhhhhhh");
    }
}

public class Palka : IStrategy
{
    public void Attack()
    {
        Console.WriteLine("HUiak pizdik");
    }
}

class GG
{
    protected string weapon;
    protected int hp;

    public GG(string weapon, int hp)
    {
        this.weapon = weapon;
        this.hp = hp;
        if (weapon == "Palka")
        {
            Attack = new Palka();
        }
        else
        {
            Attack = new Luk();
        }
    }

    public IStrategy Attack { get; set; }

    public void Decision()
    {
        Attack.Attack();
    }
}





//Состояние
abstract class State
{
    public abstract void Umermentalino(Npc context);
    public abstract void Drink(Npc context);
    public abstract void Vkid(Npc context);
}

class Talk : State
{
    public override void Umermentalino(Npc context)
    {
        Console.WriteLine("Вы умерли");
        context.State = new Sober();
        context.dmgResist = false;
    }

    public override void Drink(Npc context)
    {
        Console.WriteLine("Вы выпили, +1 к алкоголизму");
    }
    public override void Vkid(Npc context)
    {
        Console.WriteLine("Вкид оформлен");
        context.State = new Sober();
        context.dmgResist = false;
        context.money -= 500;
    }
}

class Sober : State
{
    public override void Umermentalino(Npc context)
    {
        Console.WriteLine("Вы отлично умерли ментально!");
    }
    public override void Drink(Npc context)
    {
        Console.WriteLine("Надо отпраздновать");
        context.State = new Talk();
        context.dmgResist = true;
    }
    public override void Vkid(Npc context)
    {
        Console.WriteLine("Необходим вкид");
        context.money -= 500;
    }
}


class Npc
{
    public int money;
    public string name;
    public bool dmgResist;
    public State State { get; set; }

    public Npc(State state, string name)
    {
        State = state;
        money = 1000000;
        this.name = name;
        dmgResist = false;
    }

    public void Umermentalino()
    {
        State.Umermentalino(this);
    }

    public void Drink()
    {
        State.Drink(this);
    }

    public void Vkid()
    {
        State.Vkid(this);
    }
}






//Хранитель 

class Alcoholic
{
    private int hp = 100;
    public string name;

    public Alcoholic(string name)
    {
        this.name = name;
    }

    public void Drink()
    {
        if (hp > 0)
        {
            hp--;
            Console.WriteLine($"Ваше здоровье - {hp}");
        }
        else
        {
            Console.WriteLine("У вас закончилось здоровье, вы умерли но уже не ментально");
        }
    }

    public AlcoholicSave SaveAlcoholic()
    {
        Console.WriteLine("Вы Alcoholic");
        return new AlcoholicSave(hp, name);
    }

    public void RestoreState(AlcoholicSave human)
    {
        this.hp = human.hp;
        this.name = human.name;
        Console.WriteLine("Вы успешно похилилсь");
    }
}

class AlcoholicSave
{
    public int hp { get; set; }
    public string name { get; set; }

    public AlcoholicSave(int hp, string name)
    {
        this.hp = hp;
        this.name = name;
    }
}

class GameHistory
{
    public Stack<AlcoholicSave> Alcoholics { get; private set; }
    public GameHistory()
    {
        Alcoholics = new Stack<AlcoholicSave>();
    }
}
